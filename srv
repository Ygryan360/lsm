
#!/bin/bash

# Vérification de la présence de systemctl
if ! command -v systemctl &>/dev/null; then
    echo -e "\e[31msystemctl n'est pas disponible sur ce système.\e[0m"
    exit 1
fi

# Vérification si le script est lancé en root
if [ "$EUID" -ne 0 ]; then
    SUDO="sudo"
else
    SUDO=""
fi

# Fonction générique pour afficher un menu interactif
menu_selection() {
    local prompt="$1"
    shift
    local options=("$@")
    local selected=0
    while true; do
        clear
        echo "┌────────────────────────────────────┐"
        printf "│   %s\n" "$prompt"            
        echo "└────────────────────────────────────┘"
        echo ""
        for i in "${!options[@]}"; do
            if [ $i -eq $selected ]; then
                echo -e "▶ \e[1;32m[●] ${options[$i]}\e[0m"
            else
                echo -e "  [○] ${options[$i]}"
            fi
        done

        # Lecture d'une touche sans afficher
        read -sn 1 key
        case "$key" in
            $'\x1b')
                read -sn 2 key
                case "$key" in
                    "[A")  # Flèche haut
                        ((selected--))
                        if [ $selected -lt 0 ]; then
                            selected=$((${#options[@]} - 1))
                        fi
                        ;;
                    "[B")  # Flèche bas
                        ((selected++))
                        if [ $selected -ge ${#options[@]} ]; then
                            selected=0
                        fi
                        ;;
                esac
                ;;
            "")  # Touche Entrée
                return $selected
                ;;
        esac
    done
}


# Fonction pour exécuter l'action selon le service et l'action choisie
executer_action() {
    local service="$1"
    local action="$2"
    local status_code=0

    case "$service" in
        "Apache & MySQL")
            case "$action" in
                "Démarrer")
                    echo "🚀 Démarrage d'Apache et MySQL..."
                    if ! $SUDO systemctl start httpd; then
                        echo -e "\e[31mErreur lors du démarrage d'Apache\e[0m"; status_code=1
                    fi
                    if ! $SUDO systemctl start mysqld; then
                        echo -e "\e[31mErreur lors du démarrage de MySQL\e[0m"; status_code=1
                    fi
                    echo "📌 État d'Apache :"
                    systemctl status httpd | grep -E 'Loaded:|Active:'
                    echo "📌 État de MySQL :"
                    systemctl status mysqld | grep -E 'Loaded:|Active:'
                    ;;
                "Voir le statut")
                    echo "📌 État d'Apache :"
                    systemctl status httpd | grep -E 'Loaded:|Active:'
                    echo "📌 État de MySQL :"
                    systemctl status mysqld | grep -E 'Loaded:|Active:'
                    ;;
                "Arrêter")
                    echo "🛑 Arrêt d'Apache et MySQL..."
                    if ! $SUDO systemctl stop httpd; then
                        echo -e "\e[31mErreur lors de l'arrêt d'Apache\e[0m"; status_code=1
                    fi
                    if ! $SUDO systemctl stop mysqld; then
                        echo -e "\e[31mErreur lors de l'arrêt de MySQL\e[0m"; status_code=1
                    fi
                    ;;
                "Redémarrer")
                    echo "🔄 Redémarrage d'Apache et MySQL..."
                    if ! $SUDO systemctl restart httpd; then
                        echo -e "\e[31mErreur lors du redémarrage d'Apache\e[0m"; status_code=1
                    fi
                    if ! $SUDO systemctl restart mysqld; then
                        echo -e "\e[31mErreur lors du redémarrage de MySQL\e[0m"; status_code=1
                    fi
                    echo "📌 État d'Apache :"
                    systemctl status httpd | grep -E 'Loaded:|Active:'
                    echo "📌 État de MySQL :"
                    systemctl status mysqld | grep -E 'Loaded:|Active:'
                    ;;
            esac
            ;;
        "MongoDB")
            case "$action" in
                "Démarrer")
                    echo "🚀 Démarrage de MongoDB..."
                    if ! $SUDO systemctl start mongod; then
                        echo -e "\e[31mErreur lors du démarrage de MongoDB\e[0m"; status_code=1
                    fi
                    echo "📌 État de MongoDB :"
                    systemctl status mongod | grep -E 'Loaded:|Active:'
                    ;;
                "Voir le statut")
                    echo "📌 État de MongoDB :"
                    systemctl status mongod | grep -E 'Loaded:|Active:'
                    ;;
                "Arrêter")
                    echo "🛑 Arrêt de MongoDB..."
                    if ! $SUDO systemctl stop mongod; then
                        echo -e "\e[31mErreur lors de l'arrêt de MongoDB\e[0m"; status_code=1
                    fi
                    ;;
                "Redémarrer")
                    echo "🔄 Redémarrage de MongoDB..."
                    if ! $SUDO systemctl restart mongod; then
                        echo -e "\e[31mErreur lors du redémarrage de MongoDB\e[0m"; status_code=1
                    fi
                    echo "📌 État de MongoDB :"
                    systemctl status mongod | grep -E 'Loaded:|Active:'
                    ;;
            esac
            ;;
        "PostgreSQL")
            case "$action" in
                "Démarrer")
                    echo "🚀 Démarrage de PostgreSQL..."
                    if ! $SUDO systemctl start postgresql; then
                        echo -e "\e[31mErreur lors du démarrage de PostgreSQL\e[0m"; status_code=1
                    fi
                    echo "📌 État de PostgreSQL :"
                    systemctl status postgresql | grep -E 'Loaded:|Active:'
                    ;;
                "Voir le statut")
                    echo "📌 État de PostgreSQL :"
                    systemctl status postgresql | grep -E 'Loaded:|Active:'
                    ;;
                "Arrêter")
                    echo "🛑 Arrêt de PostgreSQL..."
                    if ! $SUDO systemctl stop postgresql; then
                        echo -e "\e[31mErreur lors de l'arrêt de PostgreSQL\e[0m"; status_code=1
                    fi
                    ;;
                "Redémarrer")
                    echo "🔄 Redémarrage de PostgreSQL..."
                    if ! $SUDO systemctl restart postgresql; then
                        echo -e "\e[31mErreur lors du redémarrage de PostgreSQL\e[0m"; status_code=1
                    fi
                    echo "📌 État de PostgreSQL :"
                    systemctl status postgresql | grep -E 'Loaded:|Active:'
                    ;;
            esac
            ;;
        "Redis")
            case "$action" in
                "Démarrer")
                    echo "🚀 Démarrage de Redis..."
                    if ! $SUDO systemctl start redis; then
                        echo -e "\e[31mErreur lors du démarrage de Redis\e[0m"; status_code=1
                    fi
                    echo "📌 État de Redis :"
                    systemctl status redis | grep -E 'Loaded:|Active:'
                    ;;
                "Voir le statut")
                    echo "📌 État de Redis :"
                    systemctl status redis | grep -E 'Loaded:|Active:'
                    ;;
                "Arrêter")
                    echo "🛑 Arrêt de Redis..."
                    if ! $SUDO systemctl stop redis; then
                        echo -e "\e[31mErreur lors de l'arrêt de Redis\e[0m"; status_code=1
                    fi
                    ;;
                "Redémarrer")
                    echo "🔄 Redémarrage de Redis..."
                    if ! $SUDO systemctl restart redis; then
                        echo -e "\e[31mErreur lors du redémarrage de Redis\e[0m"; status_code=1
                    fi
                    echo "📌 État de Redis :"
                    systemctl status redis | grep -E 'Loaded:|Active:'
                    ;;
            esac
            ;;
    esac
    echo ""
    if [ $status_code -eq 0 ]; then
        echo -e "\e[32mAction terminée avec succès.\e[0m"
    else
        echo -e "\e[31mUne ou plusieurs erreurs sont survenues.\e[0m"
    fi
    echo "Appuyez sur une touche pour continuer..."
    read -sn 1
}

# Boucle principale
while true; do
    # Menu des services
    services=("Apache & MySQL" "MongoDB" "PostgreSQL" "Redis" "Quitter")
    menu_selection "Sélectionnez le service :" "${services[@]}"
    service_index=$?
    selected_service="${services[$service_index]}"

    if [ "$selected_service" = "Quitter" ]; then
        clear
        echo "Fermeture..."
        exit 0
    fi

    # Menu des actions
    actions=("Démarrer" "Voir le statut" "Arrêter" "Redémarrer" "Retour")
    menu_selection "Sélectionnez l'action pour $selected_service :" "${actions[@]}"
    action_index=$?
    selected_action="${actions[$action_index]}"

    if [ "$selected_action" = "Retour" ]; then
        continue
    else
        clear
        executer_action "$selected_service" "$selected_action"
    fi
done
